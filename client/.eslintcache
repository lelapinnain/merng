[{"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/index.js":"1","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/App.js":"2","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/reportWebVitals.js":"3","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/ApolloProvider.js":"4","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Home.js":"5","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Login.js":"6","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Register.js":"7","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/MenuBar.js":"8","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostCard.js":"9","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/hooks.js":"10","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/auth.js":"11","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/authRoute.js":"12","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostForm.js":"13","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/graphql.js":"14","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/LikeButton.js":"15","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/SinglePost.js":"16","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/DeleteButton.js":"17"},{"size":361,"mtime":1607715954333,"results":"18","hashOfConfig":"19"},{"size":942,"mtime":1608586452998,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607713364070,"results":"21","hashOfConfig":"19"},{"size":747,"mtime":1608322607844,"results":"22","hashOfConfig":"19"},{"size":1274,"mtime":1608583336541,"results":"23","hashOfConfig":"19"},{"size":2238,"mtime":1608317898019,"results":"24","hashOfConfig":"19"},{"size":3076,"mtime":1608498729914,"results":"25","hashOfConfig":"19"},{"size":1450,"mtime":1608499228694,"results":"26","hashOfConfig":"19"},{"size":1498,"mtime":1608595612718,"results":"27","hashOfConfig":"19"},{"size":396,"mtime":1608317825166,"results":"28","hashOfConfig":"19"},{"size":1398,"mtime":1608499202971,"results":"29","hashOfConfig":"19"},{"size":410,"mtime":1608317367895,"results":"30","hashOfConfig":"19"},{"size":2230,"mtime":1608578659602,"results":"31","hashOfConfig":"19"},{"size":631,"mtime":1608587485162,"results":"32","hashOfConfig":"19"},{"size":1562,"mtime":1608499187128,"results":"33","hashOfConfig":"19"},{"size":4629,"mtime":1608595495601,"results":"34","hashOfConfig":"19"},{"size":2111,"mtime":1608593432707,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ry6252",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/index.js",[],["77","78"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/App.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/reportWebVitals.js",[],["79","80"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/ApolloProvider.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Home.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Login.js",["81"],"import React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../util/hooks\";\nimport { AuthContext } from \"../context/auth\";\n\nfunction Login(props) {\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    initialState,\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(proxy, result) {\n      // or  update(proxy, {data:{login: userData} }) {\n      context.login(result.data.login);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      password: values.password,\n    },\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit} noValidate className=\"form-container\">\n        <h1>Login</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username...\"\n          name=\"username\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          value={values.username}\n          onChange={onChange}\n        ></Form.Input>\n\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password...\"\n          name=\"password\"\n          type=\"password\"\n          error={errors.password ? true : false}\n          value={values.password}\n          onChange={onChange}\n        ></Form.Input>\n\n        <Button>Login</Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      email\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Register.js",["82"],"import React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../util/hooks\";\nimport { AuthContext } from \"../context/auth\";\n\nfunction Register(props) {\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  context.path1 = \"register\";\n  const initialState = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    initialState,\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      context.login(result.data.register);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      password: values.password,\n      confirmPassword: values.confirmPassword,\n      email: values.email,\n    },\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit} noValidate className=\"form-container\">\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username...\"\n          name=\"username\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          value={values.username}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Email\"\n          placeholder=\"Email...\"\n          name=\"email\"\n          type=\"email\"\n          error={errors.email ? true : false}\n          value={values.email}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password...\"\n          name=\"password\"\n          type=\"password\"\n          error={errors.password ? true : false}\n          value={values.password}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Confirm Password\"\n          type=\"password\"\n          placeholder=\"Confirm Password...\"\n          name=\"confirmPassword\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        ></Form.Input>\n        <Button>Register</Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $password: String!\n    $confirmPassword: String!\n    $email: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        password: $password\n        confirmPassword: $confirmPassword\n        email: $email\n      }\n    ) {\n      id\n      username\n      email\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Register;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/MenuBar.js",["83"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n\nfunction MenuBar() {\n  const { user, logout } = useContext(AuthContext);\n\n  const pathName = window.location.pathname;\n  const path = pathName === \"/\" ? \"home\" : pathName.substr(1);\n  const [activeItem, setActiveItem] = useState(path);\n\n  const handleItemClick = (e, { name }) => setActiveItem(name);\n\n  const menuBar = user ? (\n    <Menu pointing secondary size=\"massive\" color=\"teal\">\n      <Menu.Item name={user.username} as={Link} to=\"/\" />\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item name=\"logout\" onClick={logout} />\n      </Menu.Menu>\n    </Menu>\n  ) : (\n    <Menu pointing secondary size=\"massive\" color=\"teal\">\n      <Menu.Item\n        name=\"home\"\n        active={activeItem === \"home\"}\n        onClick={handleItemClick}\n        as={Link}\n        to=\"/\"\n      />\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item\n          name=\"login\"\n          active={activeItem === \"login\"}\n          onClick={handleItemClick}\n          as={Link}\n          to=\"/login\"\n        />\n        <Menu.Item\n          name=\"register\"\n          active={activeItem === \"register\"}\n          onClick={handleItemClick}\n          as={Link}\n          to=\"/register\"\n        />\n      </Menu.Menu>\n    </Menu>\n  );\n  return menuBar;\n}\n\nexport default MenuBar;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostCard.js",["84"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/hooks.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/auth.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/authRoute.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostForm.js",["85","86"],"import React, { useState } from \"react\";\nimport { Button, Form, Transition } from \"semantic-ui-react\";\nimport { useForm } from \"../util/hooks\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Fetch_Posts_Query } from \"../util/graphql\";\nimport { cloneDeep } from \"lodash\";\n\nfunction PostForm() {\n  const [errors, setErrors] = useState({});\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    body: \"\",\n  });\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = cloneDeep(\n        proxy.readQuery({\n          query: Fetch_Posts_Query,\n          variables: {\n            body: values.body,\n          },\n        })\n      );\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({\n        query: Fetch_Posts_Query,\n        variables: {\n          body: values.body,\n        },\n        data: { ...data },\n      });\n      values.body = \"\";\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n  });\n  function createPostCallback() {\n    createPost();\n  }\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <h2>Create a post :</h2>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"hi world\"\n            type=\"text\"\n            name=\"body\"\n            error={error ? true : false}\n            onChange={onChange}\n            value={values.body}\n          />\n          <Button type=\"submit\" color=\"teal\">\n            Submit\n          </Button>\n        </Form.Field>\n      </Form>\n      {error && (\n        <div className=\"ui error message\" style={{ marginBottom: \"20px\" }}>\n          <ul className=\"list\">\n            <li>{error.graphQLErrors[0].message}</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\nexport default PostForm;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/graphql.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/LikeButton.js",["87","88","89","90"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nfunction LikeButton({ post: { id, likeCount, likes }, user }) {\n  const [liked, setLiked] = useState(false);\n  const [errors, setErrors] = useState({});\n  function refreshPage() {\n    window.location.href = \"/login\";\n  }\n  useEffect(() => {\n    if (user && likes.find((like) => user.username === user.username)) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  }, [user, likes]);\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: { postId: id },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n  });\n  const likeButton = user ? (\n    liked ? (\n      <Button color=\"teal\">\n        <Icon name=\"heart\" />\n      </Button>\n    ) : (\n      <Button color=\"teal\" basic>\n        <Icon name=\"heart\" />\n      </Button>\n    )\n  ) : (\n    <Button as={Link} to=\"/login\" color=\"teal\" basic>\n      <Icon name=\"heart\" />\n    </Button>\n  );\n  return (\n    <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\n      {likeButton}\n      <Label basic color=\"teal\" pointing=\"left\">\n        {likeCount}\n      </Label>\n    </Button>\n  );\n}\nconst LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!) {\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }\n`;\nexport default LikeButton;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/SinglePost.js",["91","92","93","94","95"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/DeleteButton.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":19,"column":23,"nodeType":"105","messageId":"106","endLine":19,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":23,"column":21,"nodeType":"105","messageId":"106","endLine":23,"endColumn":28},{"ruleId":"103","severity":1,"message":"107","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":41,"column":32,"nodeType":"110","messageId":"111","endLine":41,"endColumn":34},{"ruleId":"103","severity":1,"message":"112","line":2,"column":24,"nodeType":"105","messageId":"106","endLine":2,"endColumn":34},{"ruleId":"103","severity":1,"message":"113","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"114","line":3,"column":16,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},{"ruleId":"103","severity":1,"message":"113","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"115","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":14,"column":38,"nodeType":"110","messageId":"118","endLine":14,"endColumn":69},{"ruleId":"103","severity":1,"message":"119","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":27},{"ruleId":"103","severity":1,"message":"113","line":16,"column":10,"nodeType":"105","messageId":"106","endLine":16,"endColumn":16},{"ruleId":"103","severity":1,"message":"120","line":16,"column":18,"nodeType":"105","messageId":"106","endLine":16,"endColumn":27},{"ruleId":"103","severity":1,"message":"121","line":20,"column":17,"nodeType":"105","messageId":"106","endLine":20,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":89,"column":41,"nodeType":"110","messageId":"111","endLine":89,"endColumn":43},{"ruleId":"103","severity":1,"message":"122","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Transition' is defined but never used.","'errors' is assigned a value but never used.","'NavLink' is defined but never used.","'refreshPage' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'Fetch_Posts_Query' is defined but never used.","'setErrors' is assigned a value but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]