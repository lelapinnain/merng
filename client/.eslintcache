[{"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/index.js":"1","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/App.js":"2","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/reportWebVitals.js":"3","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/ApolloProvider.js":"4","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Home.js":"5","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Login.js":"6","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Register.js":"7","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/MenuBar.js":"8","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostCard.js":"9","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/hooks.js":"10","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/auth.js":"11","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/authRoute.js":"12"},{"size":361,"mtime":1607715954333,"results":"13","hashOfConfig":"14"},{"size":819,"mtime":1608255709419,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607713364070,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1607813495732,"results":"17","hashOfConfig":"14"},{"size":1203,"mtime":1608254803615,"results":"18","hashOfConfig":"14"},{"size":2241,"mtime":1608246059068,"results":"19","hashOfConfig":"14"},{"size":3047,"mtime":1608245990655,"results":"20","hashOfConfig":"14"},{"size":1439,"mtime":1608246532559,"results":"21","hashOfConfig":"14"},{"size":1408,"mtime":1607814130270,"results":"22","hashOfConfig":"14"},{"size":396,"mtime":1607901461723,"results":"23","hashOfConfig":"14"},{"size":1322,"mtime":1608252098649,"results":"24","hashOfConfig":"14"},{"size":410,"mtime":1608255729625,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ry6252",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/index.js",[],["54","55"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/App.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/reportWebVitals.js",[],["56","57"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/ApolloProvider.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Home.js",["58"],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Login.js",["59"],"import React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../util/hooks\";\nimport { AuthContext } from \"../context/auth\";\n\nfunction Login(props) {\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    initialState,\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(proxy, result) {\n      // or  update(proxy, {data:{login: userData} }) {\n      context.login(result.data.login);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      password: values.password,\n    },\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit} noValidate className=\"form-container\">\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username...\"\n          name=\"username\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          value={values.username}\n          onChange={onChange}\n        ></Form.Input>\n\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password...\"\n          name=\"password\"\n          type=\"password\"\n          error={errors.password ? true : false}\n          value={values.password}\n          onChange={onChange}\n        ></Form.Input>\n\n        <Button>Login</Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      email\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/pages/Register.js",["60"],"import React, { useState, useContext } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { useForm } from \"../util/hooks\";\nimport { AuthContext } from \"../context/auth\";\n\nfunction Register(props) {\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const initialState = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    initialState,\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      context.login(result.data.register);\n      props.history.push(\"/\");\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      password: values.password,\n      confirmPassword: values.confirmPassword,\n      email: values.email,\n    },\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit} noValidate className=\"form-container\">\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username...\"\n          name=\"username\"\n          type=\"text\"\n          error={errors.username ? true : false}\n          value={values.username}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Email\"\n          placeholder=\"Email...\"\n          name=\"email\"\n          type=\"email\"\n          error={errors.email ? true : false}\n          value={values.email}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password...\"\n          name=\"password\"\n          type=\"password\"\n          error={errors.password ? true : false}\n          value={values.password}\n          onChange={onChange}\n        ></Form.Input>\n        <Form.Input\n          label=\"Confirm Password\"\n          type=\"password\"\n          placeholder=\"Confirm Password...\"\n          name=\"confirmPassword\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        ></Form.Input>\n        <Button>Register</Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $password: String!\n    $confirmPassword: String!\n    $email: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        password: $password\n        confirmPassword: $confirmPassword\n        email: $email\n      }\n    ) {\n      id\n      username\n      email\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Register;\n","/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/MenuBar.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/components/PostCard.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/util/hooks.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/auth.js",[],"/Users/ahmedallam/Desktop/work/React-Demos/merng/client/src/context/authRoute.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":19,"column":23,"nodeType":"70","messageId":"71","endLine":19,"endColumn":30},{"ruleId":"68","severity":1,"message":"72","line":23,"column":21,"nodeType":"70","messageId":"71","endLine":23,"endColumn":28},{"ruleId":"68","severity":1,"message":"73","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"no-unused-vars","'wait' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]